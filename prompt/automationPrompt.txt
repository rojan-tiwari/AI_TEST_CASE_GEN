You are a senior test automation engineer.

Given the following user story, generate Python test cases using `pytest` and `selenium`.

- Use clear test method names that describe the scenario
- Use fixtures for setup and teardown
- Include explicit waits where needed
- Use assertions to validate critical checkpoints
- Follow best practices in structuring the test
- Do NOT hardcode waits like time.sleep()

Return the result as a valid `.py` file.
